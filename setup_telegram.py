#!/usr/bin/env python3
"""
Configurador autom√°tico para conexi√≥n a Telegram
Prueba diferentes m√©todos hasta encontrar uno que funcione
"""

import asyncio
import subprocess
import time
import requests
import logging
from src.config import settings

try:
    from aiogram import Bot
except ImportError:
    print("‚ùå aiogram no instalado")
    exit(1)

logging.basicConfig(level=logging.INFO)

async def test_telegram_connection():
    """Prueba la conexi√≥n b√°sica a Telegram"""
    print("üîç Probando conexi√≥n a Telegram...")
    
    if not settings.TELEGRAM_TOKEN:
        print("‚ùå TELEGRAM_TOKEN no configurado en .env")
        return False
    
    try:
        bot = Bot(token=settings.TELEGRAM_TOKEN)
        me = await bot.get_me()
        await bot.session.close()
        print(f"‚úÖ Conexi√≥n exitosa: @{me.username}")
        return True
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return False

def check_ngrok():
    """Verifica si ngrok est√° disponible y configurado"""
    try:
        # Verificar si ngrok est√° instalado
        subprocess.run(["ngrok", "version"], 
                      capture_output=True, check=True, timeout=5)
        print("‚úÖ ngrok encontrado")
        
        # Verificar si hay t√∫neles activos
        try:
            resp = requests.get("http://127.0.0.1:4040/api/tunnels", timeout=2)
            tunnels = resp.json().get("tunnels", [])
            if tunnels:
                for tunnel in tunnels:
                    print(f"üîó T√∫nel activo: {tunnel['public_url']}")
                return True
            else:
                print("‚ö†Ô∏è  ngrok instalado pero sin t√∫neles activos")
                return False
        except:
            print("‚ö†Ô∏è  ngrok instalado pero API no disponible")
            return False
            
    except (subprocess.CalledProcessError, subprocess.TimeoutExpired, FileNotFoundError):
        print("‚ùå ngrok no encontrado")
        return False

def install_ngrok_instructions():
    """Muestra instrucciones para instalar ngrok"""
    print("\nüì• C√ìMO INSTALAR NGROK:")
    print("1. Ve a https://ngrok.com/download")
    print("2. Descarga ngrok para Windows")
    print("3. Descomprime y coloca ngrok.exe en tu PATH")
    print("4. Ejecuta: ngrok authtoken TU_TOKEN (reg√≠strate gratis)")
    print("5. Ejecuta: ngrok http 8080")

def show_alternatives():
    """Muestra alternativas de conectividad"""
    print("\nüîÑ ALTERNATIVAS DE CONECTIVIDAD:")
    print("\n1Ô∏è‚É£  CAMBIAR DE RED (M√ÅS F√ÅCIL):")
    print("   ‚Ä¢ Hotspot m√≥vil de tu celular")
    print("   ‚Ä¢ Wifi diferente (casa, otro edificio)")
    print("   ‚Ä¢ Datos m√≥viles 4G/5G")
    
    print("\n2Ô∏è‚É£  WEBHOOK CON NGROK:")
    print("   ‚Ä¢ Instala ngrok (gratis)")
    print("   ‚Ä¢ python bot_webhook.py")
    
    print("\n3Ô∏è‚É£  SERVIDOR EXTERNO:")
    print("   ‚Ä¢ Heroku, Railway, Render (gratis)")
    print("   ‚Ä¢ Sube tu c√≥digo y ejecuta ah√≠")
    
    print("\n4Ô∏è‚É£  VPN/PROXY:")
    print("   ‚Ä¢ VPN gratuita (ProtonVPN, Windscribe)")
    print("   ‚Ä¢ Cambiar DNS (8.8.8.8, 1.1.1.1)")

async def main():
    print("üîß CONFIGURADOR DE TELEGRAM")
    print("=" * 40)
    
    # Paso 1: Probar conexi√≥n directa
    if await test_telegram_connection():
        print("\nüéâ ¬°Conexi√≥n directa funciona!")
        print("Ejecuta: python -m src.app")
        return
    
    print("\n‚ö†Ô∏è  Conexi√≥n directa fall√≥")
    
    # Paso 2: Verificar ngrok
    if check_ngrok():
        print("\nüîó ngrok disponible - puedes usar webhook")
        print("Ejecuta: python bot_webhook.py")
    else:
        install_ngrok_instructions()
    
    # Paso 3: Mostrar alternativas
    show_alternatives()
    
    print("\nüí° RECOMENDACI√ìN PARA PRESENTACI√ìN:")
    print("   üî• USA HOTSPOT M√ìVIL (m√°s r√°pido y seguro)")

if __name__ == "__main__":
    asyncio.run(main())
